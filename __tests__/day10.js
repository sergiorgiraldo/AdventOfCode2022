const lib = require("../solutions/lib/day10");

test("SolveFirstStar", () => {
	let lines = [];

	lines.push("addx 15");
	lines.push("addx -11");
	lines.push("addx 6");
	lines.push("addx -3");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx -8");
	lines.push("addx 13");
	lines.push("addx 4");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx -35");
	lines.push("addx 1");
	lines.push("addx 24");
	lines.push("addx -19");
	lines.push("addx 1");
	lines.push("addx 16");
	lines.push("addx -11");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 21");
	lines.push("addx -15");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -3");
	lines.push("addx 9");
	lines.push("addx 1");
	lines.push("addx -3");
	lines.push("addx 8");
	lines.push("addx 1");
	lines.push("addx 5");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -36");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("addx 7");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("addx 6");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 7");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx -13");
	lines.push("addx 13");
	lines.push("addx 7");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("addx -33");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 8");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 2");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 17");
	lines.push("addx -9");
	lines.push("addx 1");
	lines.push("addx 1");
	lines.push("addx -3");
	lines.push("addx 11");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -13");
	lines.push("addx -19");
	lines.push("addx 1");
	lines.push("addx 3");
	lines.push("addx 26");
	lines.push("addx -30");
	lines.push("addx 12");
	lines.push("addx -1");
	lines.push("addx 3");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -9");
	lines.push("addx 18");
	lines.push("addx 1");
	lines.push("addx 2");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 9");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 2");
	lines.push("addx -37");
	lines.push("addx 1");
	lines.push("addx 3");
	lines.push("noop");
	lines.push("addx 15");
	lines.push("addx -21");
	lines.push("addx 22");
	lines.push("addx -6");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx -10");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 20");
	lines.push("addx 1");
	lines.push("addx 2");
	lines.push("addx 2");
	lines.push("addx -6");
	lines.push("addx -11");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");

	expect(lib.solveForFirstStar(lines)).toBe(13_140);
});

test("SolveSecondStar", () => {
	let lines = [];

	lines.push("addx 15");
	lines.push("addx -11");
	lines.push("addx 6");
	lines.push("addx -3");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx -8");
	lines.push("addx 13");
	lines.push("addx 4");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx 5");
	lines.push("addx -1");
	lines.push("addx -35");
	lines.push("addx 1");
	lines.push("addx 24");
	lines.push("addx -19");
	lines.push("addx 1");
	lines.push("addx 16");
	lines.push("addx -11");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 21");
	lines.push("addx -15");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -3");
	lines.push("addx 9");
	lines.push("addx 1");
	lines.push("addx -3");
	lines.push("addx 8");
	lines.push("addx 1");
	lines.push("addx 5");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -36");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("addx 7");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("addx 6");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 7");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx -13");
	lines.push("addx 13");
	lines.push("addx 7");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("addx -33");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 8");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 2");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 17");
	lines.push("addx -9");
	lines.push("addx 1");
	lines.push("addx 1");
	lines.push("addx -3");
	lines.push("addx 11");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -13");
	lines.push("addx -19");
	lines.push("addx 1");
	lines.push("addx 3");
	lines.push("addx 26");
	lines.push("addx -30");
	lines.push("addx 12");
	lines.push("addx -1");
	lines.push("addx 3");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -9");
	lines.push("addx 18");
	lines.push("addx 1");
	lines.push("addx 2");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 9");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx -1");
	lines.push("addx 2");
	lines.push("addx -37");
	lines.push("addx 1");
	lines.push("addx 3");
	lines.push("noop");
	lines.push("addx 15");
	lines.push("addx -21");
	lines.push("addx 22");
	lines.push("addx -6");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx 2");
	lines.push("addx 1");
	lines.push("noop");
	lines.push("addx -10");
	lines.push("noop");
	lines.push("noop");
	lines.push("addx 20");
	lines.push("addx 1");
	lines.push("addx 2");
	lines.push("addx 2");
	lines.push("addx -6");
	lines.push("addx -11");
	lines.push("noop");
	lines.push("noop");
	lines.push("noop");

	expect(lib.solveForSecondStar(lines)[0].join("")).toBe(
		"##..##..##..##..##..##..##..##..##..##.."
	);
	expect(lib.solveForSecondStar(lines)[1].join("")).toBe(
		"###...###...###...###...###...###...###."
	);
	expect(lib.solveForSecondStar(lines)[2].join("")).toBe(
		"####....####....####....####....####...."
	);
	expect(lib.solveForSecondStar(lines)[3].join("")).toBe(
		"#####.....#####.....#####.....#####....."
	);
	expect(lib.solveForSecondStar(lines)[4].join("")).toBe(
		"######......######......######......####"
	);
	expect(lib.solveForSecondStar(lines)[5].join("")).toBe(
		"#######.......#######.......#######....."
	);
});
